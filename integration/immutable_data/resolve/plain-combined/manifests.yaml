---
apiVersion: v1
kind: Namespace
metadata:
  name: kubectl-envsubst-plain-combined

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kubectl-envsubst-plain-combined
  name: my-app
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/logs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-app
subjects:
  - kind: ServiceAccount
    name: my-app
    namespace: kubectl-envsubst-plain-combined

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined
data:
  APP_ENV: "production"
  APP_DEBUG: "false"

---
apiVersion: v1
kind: Secret
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined
type: Opaque
data:
  username: bXktYXBwLXVzZXI=
  password: cGFzc3dvcmQxMjM=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      serviceAccountName: my-app
      containers:
        - name: my-app
          image: my-app:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: my-app
            - secretRef:
                name: my-app

---
apiVersion: v1
kind: Service
metadata:
  name: my-app
  namespace: kubectl-envsubst-plain-combined
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
